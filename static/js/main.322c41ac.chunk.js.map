{"version":3,"sources":["components/SubTodo.js","components/SubTodoList.js","components/TodoItem.js","components/TodoList.js","components/Header.js","components/TodoInputForm.js","App.js","index.js"],"names":["SubTodo","subTodo","id","text","finished","parentId","useState","input","setInput","useContext","Context","checkTodo","changeTodo","deleteTodo","textRef","useRef","useEffect","current","focus","classList","handleBlur","event","target","blur","className","type","checked","onChange","value","onKeyDown","key","onBlur","ref","onClick","aria-hidden","memo","SubTodoList","subTodos","map","TodoItem","todo","addTodo","length","TodoList","todos","Header","TodoInputForm","inputRef","onSubmit","preventDefault","e","placeholder","disabled","trim","createContext","App","setTodos","storageData","localStorage","getItem","JSON","parse","setItem","stringify","prevTodos","maxId","Math","max","Provider","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.322c41ac.chunk.js","sourcesContent":["import { useState, useEffect, useContext, useRef, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../css/SubTodo.css';\r\nimport { Context } from '../App';\r\n\r\nconst SubTodo = ({ subTodo: { id, text, finished }, parentId }) => {\r\n  const [input, setInput] = useState(text);\r\n  const { checkTodo, changeTodo, deleteTodo } = useContext(Context);\r\n  const textRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    !text && textRef.current.focus();\r\n    //eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  let classList = 'sub-todo';\r\n  finished && (classList += ' finished');\r\n\r\n  const handleBlur = event => {\r\n    text !== input && changeTodo(id, input, parentId);\r\n    event.target.blur();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const handleKeyDown = event => {\r\n    event.key === 'Enter' && handleBlur(event);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li className={classList}>\r\n        <label className='label'>\r\n          <input\r\n            className='label__checkbox'\r\n            type='checkbox'\r\n            checked={finished}\r\n            onChange={() => checkTodo(id, parentId)}\r\n          />\r\n          <span className='label__check'>\r\n            <i className='fa fa-check icon'></i>\r\n          </span>\r\n        </label>\r\n        <input\r\n          className='sub-todo__text'\r\n          value={input}\r\n          onChange={handleChange}\r\n          onKeyDown={handleKeyDown}\r\n          onBlur={handleBlur}\r\n          ref={textRef}\r\n        />\r\n        <button className='todo__delete-bttn bttn' onClick={() => deleteTodo(id, parentId)}>\r\n          <i className='fa fa-times icon' aria-hidden='true'></i>\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nSubTodo.propTypes = {\r\n  subTodo: PropTypes.exact({\r\n    id: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    finished: PropTypes.bool.isRequired\r\n  }).isRequired,\r\n  parentId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default memo(SubTodo);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SubTodo from './SubTodo';\r\n\r\nconst SubTodoList = ({ subTodos, parentId }) => (\r\n  <ul className='sub-todo-list'>\r\n    {subTodos.map(subTodo => (\r\n      <SubTodo key={subTodo.id} parentId={parentId} subTodo={subTodo} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nSubTodoList.propTypes = {\r\n  subTodos: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      finished: PropTypes.bool.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  parentId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default SubTodoList;\r\n","import { useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../css/TodoItem.css';\r\nimport { Context } from '../App';\r\nimport SubTodoList from './SubTodoList';\r\n\r\nconst TodoItem = ({ todo: { id, text, finished, subTodos } }) => {\r\n  const [input, setInput] = useState(text);\r\n\r\n  const { addTodo, checkTodo, changeTodo, deleteTodo } = useContext(Context);\r\n\r\n  let classList = 'todo';\r\n  finished && (classList += ' finished');\r\n\r\n  const handleBlur = event => {\r\n    text !== input && changeTodo(id, input);\r\n    event.target.blur();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    setInput(event.target.value);\r\n  };\r\n\r\n  const handleKeyDown = event => {\r\n    event.key === 'Enter' && handleBlur(event);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li>\r\n        <div className={classList}>\r\n          <label className='label'>\r\n            <input\r\n              className='label__checkbox'\r\n              type='checkbox'\r\n              checked={finished}\r\n              onChange={() => checkTodo(id)}\r\n            />\r\n            <span className='label__check'>\r\n              <i className='fa fa-check icon'></i>\r\n            </span>\r\n          </label>\r\n\r\n          <input\r\n            type='text'\r\n            className='todo__text'\r\n            value={input}\r\n            onChange={handleChange}\r\n            onKeyDown={handleKeyDown}\r\n            onBlur={handleBlur}\r\n          />\r\n          <button className='todo__add-sub-bttn bttn' onClick={() => addTodo('', id)}>\r\n            <i className='fa fa-plus icon' aria-hidden='true'></i>\r\n          </button>\r\n          <button className='todo__delete-bttn bttn' onClick={() => deleteTodo(id)}>\r\n            <i className='fa fa-times icon' aria-hidden='true'></i>\r\n          </button>\r\n        </div>\r\n\r\n        {subTodos.length > 0 && <SubTodoList subTodos={subTodos} parentId={id} />}\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.exact({\r\n    id: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    finished: PropTypes.bool.isRequired,\r\n    subTodos: PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.number.isRequired,\r\n        text: PropTypes.string.isRequired,\r\n        finished: PropTypes.bool.isRequired\r\n      }).isRequired\r\n    ).isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoItem from './TodoItem';\r\nimport '../css/TodoList.css';\r\n\r\nconst TodoList = ({ todos }) => (\r\n  <ul className='todo-list'>\r\n    {todos.map(todo => (\r\n      <TodoItem todo={todo} key={todo.id} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.number.isRequired,\r\n      text: PropTypes.string.isRequired,\r\n      finished: PropTypes.bool.isRequired,\r\n      subTodos: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n          id: PropTypes.number.isRequired,\r\n          text: PropTypes.string.isRequired,\r\n          finished: PropTypes.bool.isRequired\r\n        }).isRequired\r\n      ).isRequired\r\n    }).isRequired\r\n  ).isRequired\r\n};\r\n\r\nexport default TodoList;\r\n","import {memo} from 'react';\r\nimport '../css/Header.css';\r\n\r\nconst Header = () => <h1>Список задач</h1>\r\n\r\nexport default memo(Header)","import { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../css/TodoInputForm.css';\r\n\r\nconst TodoInputForm = ({ addTodo }) => {\r\n  const [input, setInput] = useState('');\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  }, []);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    addTodo(input);\r\n    setInput('');\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  return (\r\n    <form className='todo__input-form' onSubmit={handleSubmit}>\r\n      <input\r\n        className='todo__input-field'\r\n        type='text'\r\n        onChange={e => setInput(e.target.value)}\r\n        value={input}\r\n        placeholder='Текст новой задачи'\r\n        ref={inputRef}\r\n      />\r\n      <button className='todo__add-bttn bttn' type='submit' disabled={!input.trim()}>\r\n        <i className='fa fa-plus icon' aria-hidden='true'></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nTodoInputForm.propTypes = {\r\n  addTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TodoInputForm;\r\n","import './css/App.css';\nimport React, { useEffect, useState, createContext } from 'react';\nimport TodoList from './components/TodoList';\nimport Header from './components/Header';\nimport TodoInputForm from './components/TodoInputForm';\n\nexport const Context = createContext();\n\nconst App = () => {\n  let [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const storageData = localStorage.getItem('todo-app');\n\n    storageData && setTodos(JSON.parse(storageData));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todo-app', JSON.stringify(todos));\n  }, [todos]);\n\n  const addTodo = (text, parentId = null) => {\n    if (parentId === null) {\n      setTodos(prevTodos => {\n        const maxId = Math.max(0, ...prevTodos.map(todo => todo.id));\n\n        return [...prevTodos, { id: maxId + 1, text, finished: false, subTodos: [] }];\n      });\n      return;\n    }\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        if (todo.id === parentId) {\n          const maxId = Math.max(0, ...todo.subTodos.map(subTodo => subTodo.id));\n          return {\n            ...todo,\n            subTodos: [...todo.subTodos, { id: maxId + 1, text, finished: false }]\n          };\n        }\n        return todo;\n      });\n    });\n  };\n\n  const checkTodo = (id, parentId = null) => {\n    if (parentId === null) {\n      setTodos(prevTodos =>\n        prevTodos.map(todo => (todo.id === id ? { ...todo, finished: !todo.finished } : todo))\n      );\n      return;\n    }\n    setTodos(prevTodos =>\n      prevTodos.map(todo => {\n        if (todo.id === parentId) {\n          const subTodos = todo.subTodos.map(subTodo =>\n            subTodo.id === id ? { ...subTodo, finished: !subTodo.finished } : subTodo\n          );\n          return {\n            ...todo,\n            subTodos\n          };\n        }\n        return todo;\n      })\n    );\n  };\n\n  const changeTodo = (id, text, parentId = null) => {\n    if (parentId === null) {\n      setTodos(prevTodos => prevTodos.map(todo => (todo.id === id ? { ...todo, text } : todo)));\n      return;\n    }\n    setTodos(prevTodos =>\n      prevTodos.map(todo => {\n        if (todo.id === parentId) {\n          const subTodos = todo.subTodos.map(subTodo =>\n            subTodo.id === id ? { ...subTodo, text } : subTodo\n          );\n          return { ...todo, subTodos };\n        }\n        return todo;\n      })\n    );\n  };\n\n  const deleteTodo = (id, parentId = null) => {\n    if (parentId === null) {\n      setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n      return;\n    }\n    setTodos(prevTodos =>\n      prevTodos.map(todo => {\n        if (todo.id === parentId) {\n          const subTodos = todo.subTodos.filter(subTodo => subTodo.id !== id);\n          return { ...todo, subTodos };\n        }\n        return todo;\n      })\n    );\n  };\n\n  return (\n    <div className='wrapper'>\n      <Header />\n      <Context.Provider value={{ addTodo, checkTodo, changeTodo, deleteTodo }}>\n        {todos.length ? (\n          <TodoList todos={todos} />\n        ) : (\n          <p className='empty-todo-warning'>Список задач пуст, добавьте новую задачу.</p>\n        )}\n      </Context.Provider>\n      <TodoInputForm addTodo={addTodo} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}