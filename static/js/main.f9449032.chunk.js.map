{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/Header.js","components/TodoInputForm.js","App.js","index.js"],"names":["TodoItem","todo","classList","finished","useContext","Context","checkTodo","deleteTodo","id","text","className","type","checked","onChange","htmlFor","onClick","TodoList","todos","map","Header","TodoInputForm","addTodo","handleInput","inputValue","buttonRef","onSubmit","value","placeholder","ref","disabled","trim","createContext","App","useState","setTodos","input","setInput","useRef","useEffect","storageData","localStorage","getItem","JSON","parse","current","focus","setItem","stringify","Provider","prevTodos","filter","length","event","preventDefault","maxId","Math","max","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAIe,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAC7BC,EAAY,aAChBD,EAAKE,WAAaD,GAAa,aAFU,MAGPE,qBAAWC,GAArCC,EAHiC,EAGjCA,UAAWC,EAHsB,EAGtBA,WACXC,EAAuBP,EAAvBO,GAAIC,EAAmBR,EAAnBQ,KAAMN,EAAaF,EAAbE,SAElB,OACE,mCACE,qBAAIO,UAAWR,EAAf,UACE,uBACEQ,UAAU,iBACVF,GAAE,yBAAoBA,GACtBG,KAAK,WACLC,QAAST,EACTU,SAAU,kBAAMP,EAAUE,MAE5B,uBAAOE,UAAU,aAAaI,QAAO,yBAAoBN,GAAzD,SACGC,IAEH,wBAAQC,UAAU,yBAAyBK,QAAS,kBAAMR,EAAWC,IAArE,uB,MCnBO,SAASQ,EAAT,GAA8B,IAAVC,EAAS,EAATA,MACjC,OACE,6BACGA,EAAMC,KAAI,SAAAjB,GACT,OACE,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKO,S,MCTP,SAASW,IACvB,OACC,mCACC,uG,MCHY,SAASC,EAAT,GAAyE,IAAhDC,EAA+C,EAA/CA,QAASC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,UACxE,OACE,uBAAMd,UAAU,mBAAmBe,SAAUJ,EAA7C,UACE,uBACEX,UAAU,oBACVC,KAAK,OACLE,SAAUS,EACVI,MAAOH,EACPI,YAAY,qGAChBC,IAAKJ,IAEH,wBACEd,UAAU,sBACVC,KAAK,SACLkB,UAAWN,EAAWO,OAHxB,kBCPC,IAAMzB,EAAU0B,0BAER,SAASC,IAAO,IAAD,EACJC,mBAAS,IADL,mBACvBhB,EADuB,KAChBiB,EADgB,OAEJD,mBAAS,IAFL,mBAEvBE,EAFuB,KAEhBC,EAFgB,KAItBZ,EAAYa,iBAAO,MAEzBC,qBAAU,WACR,IAAMC,EAAcC,aAAaC,QAAQ,YAErCF,GACFL,EAASQ,KAAKC,MAAMJ,IAGtBf,EAAUoB,QAAQC,UACjB,IAEHP,qBAAU,WACRE,aAAaM,QAAQ,WAAYJ,KAAKK,UAAU9B,MAC/C,CAACA,IA0BJ,OACE,sBAAKP,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAACL,EAAQ2C,SAAT,CAAkBtB,MAAO,CAAEpB,UA3Bb,SAAAE,GAChB0B,GAAS,SAAAe,GAAS,OAChBA,EAAU/B,KAAI,SAAAjB,GAAI,OAAKA,EAAKO,KAAOA,EAAZ,2BAAsBP,GAAtB,IAA4BE,UAAWF,EAAKE,WAAaF,SAyB1CM,WArBvB,SAAAC,GACjB0B,GAAS,SAAAe,GAAS,OAAIA,EAAUC,QAAO,SAAAjD,GAAI,OAAIA,EAAKO,KAAOA,QAC3DgB,EAAUoB,QAAQC,UAmBhB,SACG5B,EAAMkC,OACL,cAAC,EAAD,CAAUlC,MAAOA,IAEjB,mBAAGP,UAAU,qBAAb,mOAGJ,cAAC,EAAD,CACEW,QAvBU,SAAA+B,GACdA,EAAMC,iBAENnB,GAAS,SAAAe,GACP,IAAMK,EAAQC,KAAKC,IAAL,MAAAD,KAAI,CAAK,GAAL,mBAAWN,EAAU/B,KAAI,SAAAjB,GAAI,OAAIA,EAAKO,SAExD,MAAM,GAAN,mBAAWyC,GAAX,CAAsB,CAAEzC,GAAI8C,EAAQ,EAAG7C,KAAM0B,EAAOhC,UAAU,QAEhEiC,EAAS,IACTZ,EAAUoB,QAAQC,SAedvB,YA1Bc,SAAA8B,GAAK,OAAIhB,EAASgB,EAAMK,OAAO/B,QA2B7CH,WAAYY,EACZX,UAAWA,OC7DnBkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f9449032.chunk.js","sourcesContent":["import { useContext } from 'react';\r\nimport '../css/TodoItem.css';\r\nimport { Context } from '../App';\r\n\r\nexport default function TodoItem({ todo }) {\r\n  let classList = 'todo__item';\r\n  todo.finished && (classList += ' finished');\r\n  const { checkTodo, deleteTodo } = useContext(Context);\r\n  const { id, text, finished } = todo;\r\n\r\n  return (\r\n    <>\r\n      <li className={classList}>\r\n        <input\r\n          className='todo__checkbox'\r\n          id={`todo__checkbox-${id}`}\r\n          type='checkbox'\r\n          checked={finished}\r\n          onChange={() => checkTodo(id)}\r\n        />\r\n        <label className='todo__text' htmlFor={`todo__checkbox-${id}`}>\r\n          {text}\r\n        </label>\r\n        <button className='todo__delete-bttn bttn' onClick={() => deleteTodo(id)}>\r\n          &times;\r\n        </button>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport '../css/TodoList.css';\r\n\r\nexport default function TodoList({ todos }) {\r\n  return (\r\n    <ul>\r\n      {todos.map(todo => {\r\n        return (\r\n          <TodoItem\r\n            todo={todo}\r\n            key={todo.id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import '../css/Header.css';\r\n\r\nexport default function Header() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Список задач</h1>\r\n\t\t</>\r\n\t)\r\n}","import '../css/TodoInputForm.css';\r\n\r\nexport default function TodoInputForm({ addTodo, handleInput, inputValue, buttonRef }) {\r\n  return (\r\n    <form className='todo__input-form' onSubmit={addTodo}>\r\n      <input\r\n        className='todo__input-field'\r\n        type='text'\r\n        onChange={handleInput}\r\n        value={inputValue}\r\n        placeholder='Текст новой задачи'\r\n\t\t\t\tref={buttonRef}\r\n      />\r\n      <button\r\n        className='todo__add-bttn bttn'\r\n        type='submit'\r\n        disabled={!inputValue.trim()}>\r\n        +\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import './css/App.css';\nimport React, { useEffect, useState, useRef, createContext } from 'react';\nimport TodoList from './components/TodoList';\nimport Header from './components/Header';\nimport TodoInputForm from './components/TodoInputForm';\n\nexport const Context = createContext();\n\nexport default function App() {\n  let [todos, setTodos] = useState([]);\n  let [input, setInput] = useState('');\n\n  const buttonRef = useRef(null);\n\n  useEffect(() => {\n    const storageData = localStorage.getItem('todo-app');\n\n    if (storageData) {\n      setTodos(JSON.parse(storageData));\n    }\n\n    buttonRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todo-app', JSON.stringify(todos));\n  }, [todos]);\n\n  const checkTodo = id => {\n    setTodos(prevTodos =>\n      prevTodos.map(todo => (todo.id === id ? { ...todo, finished: !todo.finished } : todo))\n    );\n  };\n\n  const deleteTodo = id => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n    buttonRef.current.focus();\n  };\n  const handleInput = event => setInput(event.target.value);\n\n  const addTodo = event => {\n    event.preventDefault();\n\n    setTodos(prevTodos => {\n      const maxId = Math.max(0, ...prevTodos.map(todo => todo.id));\n\n      return [...prevTodos, { id: maxId + 1, text: input, finished: false }];\n    });\n    setInput('');\n    buttonRef.current.focus();\n  };\n\n  return (\n    <div className='wrapper'>\n      <Header />\n      <Context.Provider value={{ checkTodo, deleteTodo }}>\n        {todos.length ? (\n          <TodoList todos={todos} />\n        ) : (\n          <p className='empty-todo-warning'>Список задач пуст, добавьте новую задачу.</p>\n        )}\n      </Context.Provider>\n      <TodoInputForm\n        addTodo={addTodo}\n        handleInput={handleInput}\n        inputValue={input}\n        buttonRef={buttonRef}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}